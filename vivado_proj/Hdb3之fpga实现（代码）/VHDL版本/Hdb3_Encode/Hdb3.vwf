/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 10.0ms\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000000.0;
	SIMULATION_TIME = 10000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 0.01;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("Clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Data_In")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("AddV:inst|Data_OutV")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("AddV:inst|Data_OutV[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "AddV:inst|Data_OutV";
}

SIGNAL("AddV:inst|Data_OutV[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "AddV:inst|Data_OutV";
}

SIGNAL("Hdb3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Hdb3[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Hdb3";
}

SIGNAL("Hdb3[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Hdb3";
}

SIGNAL("AddB:inst4|Data_OutB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("AddB:inst4|Data_OutB[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "AddB:inst4|Data_OutB";
}

SIGNAL("AddB:inst4|Data_OutB[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "AddB:inst4|Data_OutB";
}

TRANSITION_LIST("Clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 10000;
			LEVEL 0 FOR 500.0;
			LEVEL 1 FOR 500.0;
		}
	}
}

TRANSITION_LIST("Data_In")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 983.04;
		LEVEL 0 FOR 1966.08;
		LEVEL 1 FOR 2033.92;
		LEVEL 0 FOR 4028.16;
		LEVEL 1 FOR 983.04;
		LEVEL 0 FOR 983.04;
		LEVEL 1 FOR 2005.76;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 4022.4;
		LEVEL 1 FOR 2949.12;
		LEVEL 0 FOR 4028.48;
		LEVEL 1 FOR 1000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
		}
		LEVEL 0 FOR 344.64;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 344.64;
		LEVEL 1 FOR 1000.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
		}
		LEVEL 0 FOR 530.56;
		LEVEL X FOR 327.68;
		LEVEL 0 FOR 469.44;
		LEVEL 1 FOR 1000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
		}
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
		}
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		NODE
		{
			REPEAT = 4948;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("AddV:inst|Data_OutV[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 491.52;
		LEVEL 0 FOR 8008.48;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 9000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 6000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 9973500.0;
	}
}

TRANSITION_LIST("AddV:inst|Data_OutV[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 491.52;
		LEVEL 0 FOR 8.48;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 3000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 1000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 3000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
		}
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL X FOR 1000.0;
		NODE
		{
			REPEAT = 4976;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
		}
		LEVEL 1 FOR 500.0;
	}
}

TRANSITION_LIST("Hdb3[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 6553.6;
		LEVEL 0 FOR 2946.4;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 5000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 2000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 5000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 3000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		NODE
		{
			REPEAT = 2486;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 3000.0;
		}
		LEVEL 1 FOR 500.0;
	}
}

TRANSITION_LIST("Hdb3[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 6553.6;
		LEVEL 1 FOR 946.4;
		LEVEL 0 FOR 3000.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 3000.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 2000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 2000.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 3000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL X FOR 1000.0;
		NODE
		{
			REPEAT = 2486;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 3000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1500.0;
	}
}

TRANSITION_LIST("AddB:inst4|Data_OutB[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 5570.56;
		LEVEL 0 FOR 7929.44;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 6000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 6000.0;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 9968500.0;
	}
}

TRANSITION_LIST("AddB:inst4|Data_OutB[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 5570.56;
		LEVEL 1 FOR 929.44;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 3000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 1000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 3000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
		}
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL X FOR 1000.0;
		NODE
		{
			REPEAT = 4973;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 500.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "Clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Data_In";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "AddV:inst|Data_OutV";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4;
}

DISPLAY_LINE
{
	CHANNEL = "AddV:inst|Data_OutV[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "AddV:inst|Data_OutV[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "AddB:inst4|Data_OutB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7;
}

DISPLAY_LINE
{
	CHANNEL = "AddB:inst4|Data_OutB[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "AddB:inst4|Data_OutB[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "Hdb3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
	CHILDREN = 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "Hdb3[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "Hdb3[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 8;
}

TIME_BAR
{
	TIME = 17625;
	MASTER = TRUE;
}
;
